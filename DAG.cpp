#include <bits/stdc++.h>

using namespace std;

char t114[7][7];
int topo;
int pilha[100];

int NISOT7[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,
        0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1,
        0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,
        0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,1,0,1,
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,
        0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,
        0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,1,1,
        0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,
        0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,
        0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,
        0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,0,0,
        0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,
        0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,
        0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,
        0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,
        0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,
        0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,1,0,
        0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,
        0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,0,0,1,0,
        0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,
        0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,1,0,1,
        0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,1,
        0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,
        0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,
        0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,1,0,1,
        0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,0,
        0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,1,0,
        0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,
        0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,
        0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,
        0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
        0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,
        0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,
        0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,
        0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,
        0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,
        0,0,0,0,0,1,1,1,0,0,0,1,0,1,0,1,1,0,0,0,0,
        0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,
        0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,
        0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,
        0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,
        0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,
        0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,
        0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,1,
        0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
        0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
        0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
        0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
        0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,
        0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,1,
        0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,1,0,0,1,1,1,
        0,0,0,0,1,0,1,0,0,1,0,1,1,0,0,1,0,0,0,1,1,
        0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,0,1,0,
        0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,1,
        0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,1,
        0,0,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,1,1,
        0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,
        0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        0,0,0,0,1,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,
        0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,
        0,0,0,0,1,1,1,0,1,0,0,1,1,0,0,0,1,0,1,0,1,
        0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,1,1,
        0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,
        0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,
        0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,
        0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,
        0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,
        0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,
        0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,
        0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,1,
        0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,
        0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
        0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,
        0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,
        0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,
        0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,
        0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,
        0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,1,1,
        0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,1,0,
        0,0,0,1,0,0,1,1,0,0,0,1,0,1,0,1,1,0,1,0,1,
        0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,
        0,0,0,1,0,1,1,1,0,0,0,1,0,1,0,1,1,0,1,0,1,
        0,0,0,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
        0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,1,
        0,0,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,1,
        0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,
        0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1,
        0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1,
        0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,
        0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,1,
        0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,
        0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,1,0,
        0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,1,1,
        0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,
        0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,
        0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,1,1,1,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,0,1,
        0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,0,1,0,
        0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,1,
        0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,
        0,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,
        0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,
        0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,1,0,0,0,1,1,
        0,0,1,0,1,0,1,0,0,0,0,1,0,0,1,1,0,1,0,0,0,
        0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,1,
        0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,
        0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,1,0,1,0,1,0,
        0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,1,0,1,1,0,1,
        0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,
        0,0,1,1,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,1,
        0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,
        0,0,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,1,0,
        0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,
        0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,0,
        0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,0,1,
        0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1,1,0,0,1,1,
        0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1,1,0,1,0,1,
        0,0,1,1,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,1,0,
        0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,
        0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,
        0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,
        0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1,
        0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,
        0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,
        0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,
        0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,
        0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,
        0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,0,0,
        0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
        0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,
        0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,0,1,0,
        0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,
        0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,1,
        0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,
        0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,
        0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,1,0,1,
        0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,
        0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,
        0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,
        0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,1,
        0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,
        0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,
        0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,
        0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1,
        0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,1,
        0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,0,
        0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,1,0,0,
        0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,
        0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,
        0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,
        0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,0,0,
        0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,0,1,
        0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,1,1,
        0,1,0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,1,0,1,
        0,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,
        0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,
        0,1,0,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,1,0,
        0,1,0,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,1,0,1,
        0,1,0,0,0,1,1,1,0,0,0,1,1,1,0,1,1,0,1,0,1,
        0,1,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,1,
        0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,0,0,0,1,1,
        0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,1,
        0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,
        0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,
        0,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,1,
        0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,1,
        0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,0,1,0,1,0,
        0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,1,
        0,1,0,0,1,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,
        0,1,0,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,1,0,
        0,1,0,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,1,0,1,
        0,1,0,0,1,0,1,0,0,0,0,1,1,1,0,1,0,0,0,1,1,
        0,1,1,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,
        0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,
        0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0,
        0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,
        0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,1,0,0,1,
        0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,
        0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,1,0,1,1,0,1,
        0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,1,
        0,1,1,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,1,
        0,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,
        0,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,0,1,
        0,1,1,0,0,0,1,0,0,0,0,1,0,1,1,1,0,1,0,0,0,
        0,1,1,0,0,0,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,
        0,1,1,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,
        0,1,1,0,0,0,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,
        0,1,1,0,0,0,1,0,0,0,0,1,1,1,0,1,0,1,1,0,1,
        0,1,1,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,1,0,1,
        1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,
        1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,1,0,1,
        1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,
        1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,
        1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1,1,
        1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,0,1,
        1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,
        1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,
        1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,
        1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,0,0,
        1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,
        1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,
        1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,
        1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,1,
        1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,
        1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,
        1,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,0,
        1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
        1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,
        1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,
        1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,
        1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,
        1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,1,0,
        1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,
        1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,
        1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,
        1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,0,0,1,0,
        1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1,0,0,0,0,1,
        1,0,0,0,0,0,1,0,0,1,1,1,1,0,0,1,0,0,0,1,0,
        1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,
        1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,
        1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,1,1,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,1,1,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,1,0,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,1,0,1,
        1,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,1,0,
        1,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,1,1,
        1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,1,1,
        1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,
        1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,1,0,0,
        1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,
        1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,0,0,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,1,0,0,
        1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,1,1,1,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,1,1,0,1,
        1,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,0,
        1,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,1,
        1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,1,0,
        1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,0,1,
        1,0,0,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,1,
        1,0,0,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,0,0,0,
        1,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,1,
        1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,1,
        1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,0,1,0,1,0,
        1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,0,1,1,0,1,
        1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,1,0,0,1,1,
        1,0,0,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,0,1,0,
        1,0,0,0,0,0,1,1,1,0,0,1,0,1,0,1,1,0,1,0,1,
        1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,1,0,1,1,1,0,
        1,0,0,0,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,
        1,0,0,0,0,1,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,
        1,0,0,0,0,1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,0,
        1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,1,0,1,0,1,
        1,0,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,0,1,0,1,
        1,0,0,0,1,0,0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,
        1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,
        1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,1,0,0,1,0,0,
        1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,
        1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,
        1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,
        1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,
        1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
        1,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,
        1,0,0,0,1,0,1,1,0,0,0,0,1,0,0,1,0,0,0,1,0,
        1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,
        1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,
        1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,1,0,1,
        1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,
        1,0,0,1,0,0,0,1,1,1,0,0,1,0,0,0,1,0,1,1,1,
        1,0,0,1,0,0,0,1,1,1,0,1,0,0,0,1,1,0,1,1,1,
        1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,1,
        1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
        1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,1,
        1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,
        1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,
        1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,
        1,0,0,1,0,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,1,
        1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,0,1,0,1,1,1,
        1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,
        1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,1,0,0,
        1,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0,0,
        1,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,1,
        1,0,0,1,0,0,1,1,0,0,0,1,0,0,0,1,1,0,1,1,1,
        1,0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,1,0,0,1,1,
        1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,
        1,0,0,1,0,0,1,1,1,0,0,1,0,1,0,1,1,0,1,1,1,
        1,0,1,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,0,1,
        1,0,1,0,0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,0,0,
        1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,
        1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,
        1,0,1,0,0,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,1,
        1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,
        1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,
        1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,
        1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,1,0,
        1,0,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,
        1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,
        1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,
        1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,1,
        1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,1,0,
        1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,
        1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,
        1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1,
        1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,1,0,1,
        1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,1,1,0,1,
        1,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,1,
        1,1,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,1,0,1,
        1,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,
        1,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,
        1,1,0,0,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,1,0,
        1,1,0,0,0,0,1,0,0,0,1,1,0,1,0,1,0,0,1,0,1,
        1,1,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,0,1,1,0,
        1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,0,0,1,0,0,
        1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,
        1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,
        1,1,0,0,0,0,1,0,0,1,0,1,0,0,1,1,0,0,0,0,0,
        1,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,1,
        1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,
        1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,0,0,1,0,
        1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,
        1,1,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,
        1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,
        1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,
        1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,
        1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,
        1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,1,1,
        1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,
        1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,1,0,
        1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,1,
        1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,
        1,1,0,0,0,0,1,0,1,1,0,1,1,1,0,1,0,0,1,1,1,
        1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0,1,
        1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,
        1,1,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,
        1,1,0,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,0,0,0,
        1,1,0,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,1,0,1,
        1,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,
        1,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,0,0,0,0,0,
        1,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,1,
        1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,1,0,1,
        1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,1,0,
        1,1,0,0,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,1,
        1,1,1,0,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,0,1,
        1,1,1,0,0,0,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,
        1,1,1,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0};
        

void p_clear(){
	topo = -1;
}

void p_push(int v){
	topo++;
	pilha[topo] = v;
}

int p_pop(){
	if(topo == -1){
		printf("Pilha Vazia\n");
		fflush(stdout);
	}
	
	int k = pilha[topo];
	topo--;
	
	return k;
}

void converte_inteiro_base(int num, int *resultado, int base){
	int j = 0;
	
	while(num != 0){
		resultado[j] = num % base;
		num = num / base;
		j++;
	}
	
}

void gerar_orientacao(char** mat_adj, char** mat_adj_orientada, int n_vertices, int num_orientacao, int n_arestas){
	int i, j, cont = 0;
	int orientacao[n_arestas];
	
	for(i = 0; i < n_arestas; i++)
		orientacao[i] = 0;
	
	for(i = 0; i < n_vertices; i++)
		for(j = 0;j < n_vertices; j++)
			mat_adj_orientada[i][j] = 0;
	
	converte_inteiro_base(num_orientacao, orientacao, 2);
	
	for(i = 0; i < n_vertices; i++){
		for(j = i + 1; j < n_vertices; j++){
			if(mat_adj[i][j] != 0){
				if (orientacao[cont] == 0){
					mat_adj_orientada[i][j] = mat_adj[i][j];
					mat_adj_orientada[j][i] = -mat_adj[i][j];
				} else{
					mat_adj_orientada[i][j] = -mat_adj[i][j];
					mat_adj_orientada[j][i] = mat_adj[i][j];
				}
				cont++;
			}
		}
	}
}

int n_arestas_matriz(char** mat_adj, int n_vertices, int orientado){
	int i, j, k = 0;
	
	for(i = 0; i < n_vertices; i++)
		for(j = 0; j < n_vertices; j++) {
			if(orientado == 1) {
				if((mat_adj[i][j] == 1) || (mat_adj[i][j] == -1))
					k++;
				
			} else {
				if(mat_adj[i][j] == 1)
					k++;
			}
		}
	
	return k / 2;
}

void limpa_memoria_matriz (char** mat_adj){
	free(*mat_adj);
	free(mat_adj);
}

char** cria_matriz (int n_vertices) {
	char* valores = (char *) malloc ((n_vertices * n_vertices) * sizeof(char));
	char** linhas = (char **) malloc (n_vertices * sizeof(char*));
	int i;
	
	if((valores == NULL) || (linhas == NULL))
		exit(EXIT_FAILURE);
	
	for(i = 0; i < n_vertices; i++)
		linhas[i] = valores + i*n_vertices;
	
	return linhas;
}

void orienta_torneio (int n_torneio) {
	int i, j, cont = 0;
	
	for(i = 0; i < 7; i++){
		for(j = i + 1; j < 7; j++){
            if(NISOT7[cont + (21 * n_torneio)] == 0){
                t114[i][j]= 1;
                t114[j][i]= -1;
            }
            else{
                t114[i][j] = -1;
                t114[j][i] = 1;
            }
            
            cont++;
        }
    }	
}

int take2(int n, int el, vector<int> v, int n_vertices, int n_cores2, char** mat_adj_orientada, char** torneio) {

	v.push_back(el);
	
	int i, p, size = v.size();
	
	for(p = 0; p < size - 1; p++){
		if(mat_adj_orientada[p][size - 1] != 0) {
			if(torneio[v[p]][v[size - 1]] != mat_adj_orientada[p][size - 1])
				return 0;
		}
	}
	
	if(n == n_vertices - 1){
		
		
		return 1; 
	}
	

	for(i = 0; i < n_cores2; i++) {
		if(take2(n + 1, i, v, n_vertices, n_cores2, mat_adj_orientada, torneio) == 1)
			return 1;
		
	}
	
	return 0;
}

int bfsVertice(char **mat_adj, int* visitado, int n_vertices, int v){
	int i, j, flag;
	p_clear();
	
	visitado[v] = 1;
	p_push(v);
	
    while(topo != -1){
		i = pilha[topo];
		flag = 0;
		
		for(j = 0; j < n_vertices; j++){
			if(mat_adj[i][j] == 1){
				if(visitado[j] == 1){
					return 1;
				}
				if(visitado[j] == 0){
					visitado[j] = 1;
					p_push(j);
					flag = 1;
					break;
				}
			}
		}
		
		if(flag == 0){
			visitado[i] = 2;
			p_pop();
		}
	}
	
	return 0;
}

int bfs(char **mat_adj, int n_vertices){
	int i;
	int *visitado = (int *) malloc (n_vertices * sizeof(int));
	
	for(i = 0; i < n_vertices; i++){
		visitado[i] = 0;
	}
	
	for(i = 0; i < n_vertices; i++){
		if(visitado[i] == 0){
			if(bfsVertice(mat_adj, visitado, n_vertices, i) == 1)
				return 1;
		}
	}
	
	free(visitado);
	return 0;
}

int main(int argc, char *argv[]) {
	int n_vertices, n_grafos, n_arestas, n_totalO, sim, i, j, l, k, p, r, total = 0, total7 = 12;
	char** mat_adj;
	char** mat_adj_orientada;
	char** torneio7;
	vector<int> v;
	string name;
	
	sscanf(argv[1], "%d", &n_vertices);
	sscanf(argv[2], "%d", &n_grafos);
	
	mat_adj = cria_matriz(n_vertices);
	mat_adj_orientada = cria_matriz(n_vertices);
	torneio7 = cria_matriz(7);
	int torneios[12] = {13, 23, 46, 48, 53, 55, 200, 320, 375, 384, 400, 430 };
	int total1[total7], flags[total7];
	int torneios2[total7][7][7];
	
	for(i = 0; i < total7; i++){
		total1[i] = 0;
		flags[i] = 1;
	}
	
	for(i = 0; i < total7; i++){
		orienta_torneio(torneios[i]);
		
		for(p = 0; p < 7; p++)
			for(r = 0; r < 7; r++)
				torneios2[i][p][r] = t114[p][r];
	}
	
	char entrada[n_grafos][n_vertices][n_vertices];
	
	for(l = 0; l < n_grafos; l++){
	
		getline(cin, name);
		getline(cin, name);
		
		for(i = 0; i < n_vertices; i++) {
			for(j = 0; j < n_vertices; j++) {
				cin >> k;
				
				entrada[l][i][j] = k;
			}
		}
		
		getline(cin, name);
	}
	
	for(l = 0; l < n_grafos; l++){
		
		for(i = 0; i < n_vertices; i++)
			for(j = 0; j < n_vertices; j++)
				mat_adj[i][j] = entrada[l][i][j];
		
		n_arestas = n_arestas_matriz(mat_adj, n_vertices, 0);
		n_totalO = pow(2, n_arestas);
		
		for(i = 0; i < n_totalO; i++){
			gerar_orientacao(mat_adj, mat_adj_orientada, n_vertices, i, n_arestas);
			
			if(bfs(mat_adj_orientada, n_vertices) == 0){
				total++;
				
				for(j = 0; j < total7; j++){
					if(flags[j] == 1){
						
						for(p = 0; p < 7; p++)
							for(r = 0; r < 7; r++)
								torneio7[p][r] = torneios2[j][p][r];
					
						sim = 0;
						
						for(k = 0; k < 7; k++)
							if(take2(0, k, v, n_vertices, 7, mat_adj_orientada, torneio7) == 1) {
								sim = 1;
								break;
							}
						
						v.clear();
						
						if(sim == 0){
							flags[j] = 0;
							printf("%d, ", j);
							fflush(stdout);
						} else {
							total1[j]++;
						}
					}
				}
				
			}
			
		}
	}
	
	//~ for(i = 0; i < total7; i++)
		//~ if(total == total1[i])
			//~ printf("%d, ", torneios[i]);
	
	limpa_memoria_matriz(mat_adj_orientada);
	limpa_memoria_matriz(mat_adj);
	limpa_memoria_matriz(torneio7);
	
	return 0;
}
